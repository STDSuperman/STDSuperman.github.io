(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{410:function(s,t,a){"use strict";a.r(t);var e=a(27),v=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"深入理解vue-ssr服务端渲染的-爱恨情仇"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深入理解vue-ssr服务端渲染的-爱恨情仇"}},[s._v("#")]),s._v(" 深入理解Vue SSR服务端渲染的“爱恨情仇”")]),s._v(" "),a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),a("p",[s._v("其实总结这篇关于"),a("code",[s._v("Vue SSR")]),s._v("整体流程的文章已经算是一年前的任务了，还记得当时在准备面试的时候，似乎“八股文”多有出现关于服务端渲染整体流程的问题，为了能在面试中不被疯狂嘲讽😭，笔者当时还是花了点时间好好研究了下如果实现一个"),a("code",[s._v("Vue SSR")]),s._v("的过程。")]),s._v(" "),a("p",[s._v("当然这个过程中并不顺利，可能是笔者当时水平有限，在查阅官方文档时，对于官方文档中描述的种种概念不太能理解，于是乎我打开了百度，扑面而来的文章数不胜数，然而在我打开了多个博客然后又退出来之后，发现很多都是水文，几乎没有提供有价值的、整体性的分析。即便是有大神也进行了相关内容的撰写，但理解起来也不是那么容易，所以在笔者“边哭边学”终于弄懂一二之后，决心一定要自己好好总结一篇完整的文章，巩固自身对这方面知识的理解，并也希望能够给存在相似经历的读者带来一点启发和帮助。")]),s._v(" "),a("h2",{attrs:{id:"概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[s._v("#")]),s._v(" 概念")]),s._v(" "),a("p",[s._v("在进入本文进行详细分析之前，我们需要理解以下几个概念：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("CSR")]),s._v(" - 客户端渲染")]),s._v(" "),a("li",[a("code",[s._v("Prerender")]),s._v(" - 预渲染")]),s._v(" "),a("li",[a("code",[s._v("SSR")]),s._v(" - 服务端渲染")])]),s._v(" "),a("blockquote",[a("p",[s._v("渲染：将数据和模版组装成"),a("code",[s._v("html")])])]),s._v(" "),a("h3",{attrs:{id:"csr-客户端渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csr-客户端渲染"}},[s._v("#")]),s._v(" CSR-客户端渲染")]),s._v(" "),a("p",[s._v("顾名思义，客户端渲染即是由浏览器来负责全部的渲染工作，采用"),a("code",[s._v("ajax")]),s._v("进行异步数据的获取。对于我们传统的"),a("code",[s._v("SPA")]),s._v("（单页应用）来说，我们如果不去进行一些额外的工作，那么它默认就是采用客户端渲染。")]),s._v(" "),a("p",[s._v("也就是说服务端仅提供接口和静态资源，对于客户端渲染的应用来说，在用户初次访问网页的时候，会经历以下过程：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://blog-images-1257398419.cos.ap-nanjing.myqcloud.com/vue-ssr/CSR.png",alt:"CSR"}})]),s._v(" "),a("p",[s._v("刚开始渲染的页面内容是空的，它需要执行"),a("code",[s._v("JS")]),s._v("文件来进行页面的元素的创建和插入，并进行重新渲染，如果说该"),a("code",[s._v("JS")]),s._v("文件过大，在请求该文件的过程中，我们看的页面就是空白的，所以对于"),a("code",[s._v("SPA")]),s._v("应用来说，我们经常需要面临的问题就是，如何减少首页白屏时间，这也就牵扯到我们各种前端性能优化相关的内容了。")]),s._v(" "),a("p",[s._v("正所谓有利必有弊，福祸相依，那么对于客户端渲染来说，它又有哪些优缺点呢。这里将有笔者为你娓娓道来。")]),s._v(" "),a("h4",{attrs:{id:"优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[s._v("#")]),s._v(" 优点")]),s._v(" "),a("ul",[a("li",[s._v("首次加载完之后，页面响应速度快。")]),s._v(" "),a("li",[s._v("前后端分离。")]),s._v(" "),a("li",[s._v("可以进行各种组件服用以及懒加载等能力。")]),s._v(" "),a("li",[s._v("结构清晰，无需与服务端各项逻辑进行耦合，开发体验友好。")]),s._v(" "),a("li",[s._v("前端技术栈可以更加丰富，无需被各种模板引擎所束缚。")])]),s._v(" "),a("h4",{attrs:{id:"缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[s._v("#")]),s._v(" 缺点")]),s._v(" "),a("ul",[a("li",[s._v("不利于"),a("code",[s._v("SEO")]),s._v("。")]),s._v(" "),a("li",[s._v("首页性能差，容易白屏。")])]),s._v(" "),a("p",[s._v("针对于客户端渲染的这些问题来说，我们可以预见性的发现它更适合公司内部的管理后台或者其他不需要考虑"),a("code",[s._v("SEO")]),s._v("和首屏加载速度的场景下。")]),s._v(" "),a("p",[s._v("当然为了解决以上两大让人头疼的问题，我们就有了以下的方案：预渲染和服务端渲染。")]),s._v(" "),a("h3",{attrs:{id:"prerender-预渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prerender-预渲染"}},[s._v("#")]),s._v(" Prerender-预渲染")]),s._v(" "),a("p",[s._v("即利用打包工具对应用进行预先渲染，让用户在首次获取到"),a("code",[s._v("HTML")]),s._v("文件的时候就已经能看到我们的内容，接着等待"),a("code",[s._v("Bundle")]),s._v("下载解析完成之后再进行接管。")]),s._v(" "),a("p",[s._v("那么我们在打包构建预渲染的核心原理又是什么呢？其实这里就要用到我们十分强大的无头浏览器来帮助实现这项功能了，他会在本地启动一个无头浏览器，并访问我们配置好的路由，接着将渲染好的页面"),a("code",[s._v("HTML")]),s._v("内容输出到我们的"),a("code",[s._v("HTML")]),s._v("文件中，并建立相关的目录，也就是我们上述所看到的结构。")]),s._v(" "),a("p",[s._v("我们一般常用的无头例如有："),a("code",[s._v("phantomjs")]),s._v("，"),a("code",[s._v("puppeteer")]),s._v("，对于"),a("code",[s._v("prerender-spa-plugin")]),s._v("插件来说，他内部就是采用了"),a("code",[s._v("phantomjs")]),s._v("作为无头浏览器进行预渲染。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://blog-images-1257398419.cos.ap-nanjing.myqcloud.com/vue-ssr/Prerender.png",alt:"pre-render"}})]),s._v(" "),a("h4",{attrs:{id:"优点-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优点-2"}},[s._v("#")]),s._v(" 优点")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("SEO")]),s._v(" - 对于搜索引擎爬虫来说（先排除高级爬虫），它不会等待你的"),a("code",[s._v("JS")]),s._v("执行完成之后才进行抓取，如果不进行预渲染，对于客户端渲染应用来说，"),a("code",[s._v("HTML")]),s._v("文件中几乎没有什么内容，故会影响你的搜索排名。采用预渲染就能保证在首次加载就能获取到相关的"),a("code",[s._v("HTML")]),s._v("内容，利于"),a("code",[s._v("SEO")]),s._v("。")]),s._v(" "),a("li",[s._v("弱网环境：对于网络条件较差的用户来说，你的"),a("code",[s._v("Bundle")]),s._v("文件过大，会导致页面长时间白屏，这将使你白白流失很多用户，所以首次内容的快速呈现也是十分重要的，解决首页白屏问题。")]),s._v(" "),a("li",[s._v("兼容浏览器差异：对于部分浏览器（点谁心里有数啊QAQ）来说，有些高级特性是不支持的，这个时候如果在执行"),a("code",[s._v("JS")]),s._v("的过程中异常将可能存在浏览器页面显示异常的情况，这个时候预渲染的能力也是能兼容这种情况的。")])]),s._v(" "),a("p",[s._v("那么我们又该如何进行预渲染呢？")]),s._v(" "),a("p",[s._v("这里就直接以"),a("code",[s._v("Webpack")]),s._v("为例，我们可以直接使用它的预渲染插件："),a("code",[s._v("prerender-spa-plugin")]),s._v("。")]),s._v(" "),a("p",[s._v("我们直接使用该插件的时候可以配置需要预渲染的路由：")]),s._v(" "),a("blockquote",[a("p",[s._v("默认情况下 "),a("code",[s._v("HTML")]),s._v(" 会在脚本执行完被捕获并输出。你也可以指定一些钩子，"),a("code",[s._v("HTML")]),s._v(" 将会在特定时机被捕获。")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" path "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'path'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" PrerenderSpaPlugin "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'prerender-spa-plugin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//...")]),s._v("\n  plugins"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PrerenderSpaPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./dist'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/home'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 监听到自定事件时捕获")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// document.dispatchEvent(new Event('custom-post-render-event'))")]),s._v("\n        captureAfterDocumentEvent"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'custom-post-render-event'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 查询到指定元素时捕获")]),s._v("\n        captureAfterElementExists"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'#content'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 定时捕获")]),s._v("\n        captureAfterTime"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("p",[s._v("这样配置完之后我们就能在我们的"),a("code",[s._v("dist")]),s._v("目录中找到相关路由的预渲染"),a("code",[s._v("HTML")]),s._v("文件啦。")]),s._v(" "),a("div",{staticClass:"language-powershell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[s._v("dist\n│  index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("html\n│\n├─home\n│  index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("html\n│\n├─foo\n│  index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("html\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("从宏观角度上看，是不是也是十分便捷呢，这样我们一些需要进行预先渲染的页面就能具备预渲染能力了。")]),s._v(" "),a("h4",{attrs:{id:"缺点-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缺点-2"}},[s._v("#")]),s._v(" 缺点")]),s._v(" "),a("p",[s._v("也正是因为预渲染的构建是由打包工具在打包的时候就渲染出来了，所以如果不重新构建，那么用户所看到的预渲染页面永远都是一成不变的，即便你的页面数据早已更新，但是初次渲染的时候，浏览器展示的依旧是这套老旧的数据，如果想要看到最新的数据就需要等待"),a("code",[s._v("JS")]),s._v("下载完毕重新渲染的时候才能出现，从而是用户感觉很突兀的感觉。")]),s._v(" "),a("p",[s._v("由于需要借助打包工具的力量，所以我们需要增加一些配置成本，不仅如此，在进行预渲染时，也同样会拉长打包的总时间，使我们每次构建的速度大大降低，这是十分糟糕的开发体验。")]),s._v(" "),a("h3",{attrs:{id:"ssr-服务端渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssr-服务端渲染"}},[s._v("#")]),s._v(" SSR-服务端渲染")]),s._v(" "),a("p",[s._v("服务端渲染的方式其实就好比我们以前使用"),a("code",[s._v("jsp")]),s._v("等技术直接在服务端借助模板引擎直接渲染出"),a("code",[s._v("HTML")]),s._v("文档返回给客户端，对于一些小型项目而言，这种方式无疑是比较节约人力成本的，但不得不说这种开发方式十分不友好。")]),s._v(" "),a("p",[s._v("不同于预渲染方式，服务端渲染的好处在于，客户端在初次获取到页面时看到的就已经是最新的数据渲染出来的页面了，服务端会预先获取到需要渲染的数据，并组装成完整的页面返回给客户端，这种方式无疑就比预渲染数据延迟的模式友好得多。")]),s._v(" "),a("p",[s._v("对于我们目前主流的前端框架来说："),a("code",[s._v("Vue")]),s._v("、"),a("code",[s._v("React")]),s._v("，都已支持了服务端渲染，只不过相对于纯"),a("code",[s._v("SPA")]),s._v("页面开发来说，研发成本也相应的有所提高，我们需要考虑许多兼容情况。如果使用过这两大框架的童鞋可能就会接触到虚拟"),a("code",[s._v("DOM")]),s._v("这个概念，在实现上，他们其实也就是一个个"),a("code",[s._v("JS")]),s._v("对象，我们在前端一般操作"),a("code",[s._v("DOM")]),s._v("的方式都是在操作虚拟"),a("code",[s._v("DOM")]),s._v("，也正是因为有虚拟"),a("code",[s._v("DOM")]),s._v("，我们才能方便的实现"),a("code",[s._v("SSR")]),s._v("。")]),s._v(" "),a("p",[s._v("我们在浏览器端操作虚拟"),a("code",[s._v("DOM")]),s._v("对应的是操作真实的"),a("code",[s._v("DOM")]),s._v("元素，而在进行服务端渲染时，"),a("code",[s._v("Node")]),s._v("端操作虚拟"),a("code",[s._v("DOM")]),s._v("实际上是在操作字符串。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://blog-images-1257398419.cos.ap-nanjing.myqcloud.com/vue-ssr/SSR.png",alt:"ssr.png"}})]),s._v(" "),a("h4",{attrs:{id:"优点-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优点-3"}},[s._v("#")]),s._v(" 优点")]),s._v(" "),a("ul",[a("li",[s._v("用户看到完整页面的速度快，因为不需要客户端重新进行渲染，在服务端已经把当前页面渲染完毕了。")]),s._v(" "),a("li",[s._v("利于"),a("code",[s._v("SEO")]),s._v("，爬虫在抓取我们页面内容的时候就已经能获取到一个渲染好的页面了，所以能轻松获取到网站的关键信息。")]),s._v(" "),a("li",[s._v("节省客户端资源，不需要客户端进行渲染操作，对于移动端用户来说，耗电量减少。")]),s._v(" "),a("li",[s._v("可以利用缓存机制，将一些页面进行缓存，进一步提高响应速度。")]),s._v(" "),a("li",[s._v("数据实时性。")]),s._v(" "),a("li",[s._v("无需关注浏览器兼容问题。")])]),s._v(" "),a("h4",{attrs:{id:"缺点-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缺点-3"}},[s._v("#")]),s._v(" 缺点")]),s._v(" "),a("ul",[a("li",[s._v("服务器资源占用，使用服务端渲染，其实也就是把本该在客户端渲染的工作转交给了服务端，这在大流量场景下必然会给服务器带来一定压力。")]),s._v(" "),a("li",[s._v("开发成本提高，对于开发者而言我们需要兼顾两端的兼容性，比如"),a("code",[s._v("DOM")]),s._v("的操作，在服务端是不存在"),a("code",[s._v("DOM")]),s._v("的。")])]),s._v(" "),a("h3",{attrs:{id:"同构的概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同构的概念"}},[s._v("#")]),s._v(" 同构的概念")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://blog-images-1257398419.cos.ap-nanjing.myqcloud.com/vue-ssr/tonggou.png",alt:"同构.jpg"}})]),s._v(" "),a("p",[s._v("在"),a("code",[s._v("React")]),s._v("、"),a("code",[s._v("Vue")]),s._v("中，我们或许经常能听到同构这样的词汇，那么何为同构呢？")]),s._v(" "),a("p",[s._v("其实就是客户端与服务端进行配合，将代码在客户端与服务端各跑一次，服务端仅负责初次页面的渲染工作，而其他页面的渲染就转交给客户端"),a("code",[s._v("SPA")]),s._v("进行控制，这样不仅能减轻服务端的压力，也能在一定程度上有利于前后端分离，提高我们的开发体验。")]),s._v(" "),a("h4",{attrs:{id:"hydrate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hydrate"}},[s._v("#")]),s._v(" Hydrate")]),s._v(" "),a("p",[s._v("在这个过程当中，一般服务端渲染完初始页的内容之后，会有一个"),a("code",[s._v("Hydrate")]),s._v("的过程，在客户端会创建出对应的虚拟"),a("code",[s._v("DOM")]),s._v("并与服务端渲染的"),a("code",[s._v("DOM")]),s._v("进行比对，如果匹配，那么客户端将直接接管服务端渲染好的页面，如果不匹配，那么客户端就会重新生成新的真实"),a("code",[s._v("DOM")]),s._v("，然后抛弃服务端渲染出来的"),a("code",[s._v("DOM")]),s._v("，这也将造成性能损耗，所以在代码编写中应该避免一些浏览器机制导致的坑。")]),s._v(" "),a("blockquote",[a("p",[s._v("浏览器会在 "),a("code",[s._v("<table>")]),s._v(" 内部自动注入 "),a("code",[s._v("<tbody>")]),s._v("，然而，由于 Vue 生成的虚拟 DOM (virtual DOM) 不包含 "),a("code",[s._v("<tbody>")]),s._v("，所以会导致无法匹配。为能够正确匹配，请确保在模板中写入有效的 HTML。")])]),s._v(" "),a("h2",{attrs:{id:"vue-ssr原理概览"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-ssr原理概览"}},[s._v("#")]),s._v(" Vue SSR原理概览")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://blog-images-1257398419.cos.ap-nanjing.myqcloud.com/vue-ssr/Vue-SSR-Core.png",alt:"Vue-SSR"}})]),s._v(" "),a("p",[s._v("这里我们从官网给出来的一张整体流程图来分析，我们可以发现我们的业务代码将由"),a("code",[s._v("app.js")]),s._v("作为入口，并且需要配合"),a("code",[s._v("webpack")]),s._v("进行打包，同时我们的项目需要提供两套"),a("code",[s._v("webpack")]),s._v("配置，分别为服务端构建配置和客户端构建的配置。")]),s._v(" "),a("p",[s._v("通过这个过程打包完毕之后我们就能拿到两个"),a("code",[s._v("Bundle")]),s._v("，服务端"),a("code",[s._v("Bundle")]),s._v("将由服务器（"),a("code",[s._v("Node.js")]),s._v("）进行服务端渲染，并将渲染好的结果返回给客户端，同时会有一个"),a("code",[s._v("Hydrate")]),s._v("（注水）的过程，将我们服务端渲染好的"),a("code",[s._v("HTML")]),s._v("与客户端代码进行混合，接着由客户端接管页面的渲染，正如前面所说，这个注水的过程我们也需要注意规避一些不必要的坑。")]),s._v(" "),a("p",[s._v("不仅如此，我们从图中可以看到，服务端构建配置的"),a("code",[s._v("entry")]),s._v("与客户端构建配置的"),a("code",[s._v("entry")]),s._v("都引入了同一个"),a("code",[s._v("app.js")]),s._v("，所以这就是我们前面为什么提到我们的代码需要考虑两端的兼容问题，同一份代码将会执行在两个不同的环境中。")]),s._v(" "),a("blockquote",[a("p",[s._v("这里也不要被这个图吓到，本质上其实概念不多，如果说想要配置一个简易的"),a("code",[s._v("SSR")]),s._v("应该还是不难的。")])])])}),[],!1,null,null,null);t.default=v.exports}}]);